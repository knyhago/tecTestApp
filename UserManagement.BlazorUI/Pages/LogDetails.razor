@using UserManagement.Data.Entities
@page "/logDetails/{id:int}"
@inject HttpClient Http
<h3>LogDetails</h3>

@if(log is null)
{
    <p><em>Details Loadingg...</em></p>
}

else{
    <table class="table table-striped table-bordered">
    <tr><td>Id :</td> <td>@log.Id</td></tr>
    <tr><td>UserId :</td> <td>@log.UserId</td></tr>
    <tr><td>Action :</td> <td>@log.Action</td></tr>
    <tr><td>Details :</td> <td>@log.Details</td></tr>
    <tr><td>PerformedBy :</td> <td>@log.PerformedBy</td></tr>
    <tr><td>Timestamp :</td> <td>@log.Timestamp</td></tr>    
</table>
    <a type="button" class="btn btn-primary"href=@($"/viewLogs/{log.UserId}")>Back</a>


}

@code {

    [Parameter]
    public int id{get;set;}
    public Log? log{get;set;}

    protected override async Task OnParametersSetAsync()
    {
        var logs= await Http
        .GetFromJsonAsync<List<Log>>($"https://localhost:7084/api/logs");

            if(logs is null)
            {
              throw new Exception("Details are null for this Log");

            }

        log=logs.First(item=>item.Id==id);

    }

}


